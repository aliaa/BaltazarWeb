@model IEnumerable<BaltazarWeb.Models.Student>
@inject AliaaCommon.MongoDB.MongoHelper DB

@{
    ViewData["Title"] = "لیست دانش آموزان";
}



<form asp-action="Index">
    <p style="margin:10px; text-align:center;">
        شهر: 
        <select id="city" name="city" onchange="document.forms[0].submit();" asp-items="ViewBag.Cities"></select>
        <script type="text/javascript">
            window.onload = function() {
                $("#city").val("@ViewBag.SelectedCity");
            }
        </script>
    </p>
</form>
<div style="width:120%">
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Password)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Grade)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StudyFieldId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegistrationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SchoolName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Coins)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalPoints)
                </th>
                <th>سوالات تائید شده</th>
                <th>سوالات رد شده</th>
                <th>جوابهای تائید شده</th>
                <th>جوابهای رد شده</th>
                <th>جوابهای گزارش شده</th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.ActionLink("ویرایش", "Edit", new { id = item.Id.ToString() }) |
                    @Html.ActionLink("غیر فعال سازی", "Disable", new { id = item.Id.ToString() })
                    @if (item.PusheId != null)
                    {
                        <span> | </span>
                        @Html.ActionLink("ارسال اعلان", "SendNew", "Push", new { pusheId = item.PusheId })
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
                <td>
                    @(DB.FindById<StudyField>(item.StudyFieldId)?.Name)
                </td>
                <td>
                    @Utils.GetPersianDateString(item.RegistrationDate, false)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SchoolName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Coins)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalPoints)
                </td>
                <td>
                    @(DB.Count<Question>(q => q.UserId == item.Id && q.PublishStatus == BaseUserContent.PublishStatusEnum.Published))
                </td>
                <td>
                    @(DB.Count<Question>(q => q.UserId == item.Id && q.PublishStatus == BaseUserContent.PublishStatusEnum.Rejected))
                </td>
                <td>
                    @(DB.Count<Answer>(a => a.UserId == item.Id && a.Response == Answer.QuestionerResponseEnum.Accepted))
                </td>
                <td>
                    @(DB.Count<Answer>(a => a.UserId == item.Id && a.Response == Answer.QuestionerResponseEnum.Rejected))
                </td>
                <td>
                    @(DB.Count<Answer>(a => a.UserId == item.Id && a.Response == Answer.QuestionerResponseEnum.Reported))
                </td>
            </tr>
    }
        </tbody>
    </table>
</div>